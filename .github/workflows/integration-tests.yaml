name: Integration Tests

on:
  push:
    branches: [dev, staging, master]
  pull_request:
    branches: [dev, staging, master, 'release/**', 'hotfix/**']
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read

jobs:
  security-validation:
    name: Security Framework Validation
    runs-on: ubuntu-24.04
    timeout-minutes: 15
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify project structure
        run: |
          # Verify core project files exist
          test -f Cargo.toml
          test -f Dockerfile.secure
          test -d pallets/
          test -d runtime/
          echo "✅ Project structure verified"

      - name: Validate secure Dockerfile
        run: |
          # Check that secure Dockerfile has security best practices
          grep -q "FROM.*AS builder" Dockerfile.secure
          grep -q "RUN useradd -m -u 1001" Dockerfile.secure
          grep -q "USER cere" Dockerfile.secure
          grep -q "HEALTHCHECK" Dockerfile.secure
          echo "✅ Secure Dockerfile validation passed"

      - name: Check GitHub Actions security
        run: |
          # Verify workflows use secure versions (exclude this validation file itself)
          if grep -r "actions/checkout@v3\|actions/setup-.*@v3\|actions/cache@v3" .github/workflows/ --include="*.yaml" --include="*.yml" --exclude="integration-tests.yaml"; then
            echo "❌ Found outdated action versions in workflows"
            exit 1
          fi
          echo "✅ GitHub Actions security validation passed"

      - name: Verify no credential exposure
        run: |
          # Check that no AWS credentials are in build args
          if grep -r "AWS_ACCESS_KEY_ID\|AWS_SECRET_ACCESS_KEY" .github/workflows/ --include="*.yaml" --include="*.yml" | grep -v "secrets\." ; then
            echo "❌ Found exposed AWS credentials in workflows"
            exit 1
          fi
          echo "✅ No credential exposure detected"

  docker-security-test:
    name: Docker Security Test
    runs-on: ubuntu-24.04
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Test secure Docker build
        run: |
          # Test that secure Dockerfile builds without credentials
          docker build -f Dockerfile.secure -t test-secure-build . --no-cache
          echo "✅ Secure Docker build completed"

      - name: Verify container security
        run: |
          # Check that container runs as non-root
          USER_ID=$(docker run --rm test-secure-build id -u)
          if [ "$USER_ID" = "0" ]; then
            echo "❌ Container running as root user"
            exit 1
          fi
          echo "✅ Container security verified - running as user $USER_ID"
