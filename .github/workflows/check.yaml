name: Check Set-Up & Build

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ '**' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  check:
    # The type of runner that the job will run on
    runs-on: ["self-hosted", "cere-network-xlarge-workers"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install linux dependencies
        run: sudo apt update && sudo apt install -y cargo clang libssl-dev llvm libudev-dev protobuf-compiler

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source "$HOME/.cargo/env"
          rustup install 1.70.0
          rustup default 1.70.0
          rustup update nightly
          rustup update stable --no-self-update
          rustup target add wasm32-unknown-unknown
          export PATH="$HOME/.cargo/bin:$PATH"

      - name: Check TOML
        uses: dprint/check@v2.2

      - name: Check Format
        run: |
          cargo fmt -- --check

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Check with Clippy
        run: |
          cargo clippy --no-deps --all-targets --features runtime-benchmarks --workspace -- --deny warnings

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.15.0'
          args: '--verbose --locked --no-fail-fast --workspace --features runtime-benchmarks --out "Xml"' 
        
      - name: Check Build
        run: |
          SKIP_WASM_BUILD=1 cargo +1.70.0 check --release

      - name: Check Build for Benchmarking
        run: >
          pushd node &&
          cargo check --features=runtime-benchmarks --release

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: tarpaulin coverage
          path: ./tarpaulin-report.xml