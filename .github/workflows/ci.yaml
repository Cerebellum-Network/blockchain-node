name: PR

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ '**' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  format:
    name: Check Lints
    runs-on: ubuntu-22.04
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2023-10-22
          override: true
          components: rustfmt
      - name: Check TOML
        uses: dprint/check@v2.2
      - name: Check Format
        run: |
          cargo fmt -- --check

  check:
    name: Cargo check
    needs: format
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install linux dependencies
        run: sudo apt update && sudo apt install -y cargo clang libssl-dev llvm libudev-dev protobuf-compiler
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2023-10-22
          override: true
          target: wasm32-unknown-unknown
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Check Build
        run: |
          SKIP_WASM_BUILD=1 cargo check --release
      - name: Check Build for Benchmarking
        run: >
          pushd node &&
          cargo check --features=runtime-benchmarks --release


  clippy:
    name: Run Clippy
    needs: format
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install linux dependencies
        run: sudo apt update && sudo apt install -y cargo clang libssl-dev llvm libudev-dev protobuf-compiler
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2023-10-22
          override: true
          target: wasm32-unknown-unknown
          components: clippy
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Check with Clippy
        run: |
          cargo clippy --no-deps --all-targets --features runtime-benchmarks --workspace -- --deny warnings

  tests:
    name: Run tests
    needs: format
    # The type of runner that the job will run on
    runs-on: ["self-hosted", "cere-network-memory-large"]
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Install linux dependencies
        run: sudo apt update && sudo apt install -y cargo clang libssl-dev llvm libudev-dev protobuf-compiler
      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2023-10-22
          override: true
          target: wasm32-unknown-unknown
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.22.0'
          args: '--verbose --locked --no-fail-fast --workspace --features runtime-benchmarks --out "Xml"'
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: tarpaulin coverage
          path: ./tarpaulin-report.xml
