name: PR

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ '**' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  format:
    name: Check Lints
    runs-on: ubuntu-24.04
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2024-03-12
          override: true
          components: rustfmt
      - name: Check TOML
        uses: dprint/check@v2.2
      - name: Check Format
        run: |
          cargo fmt -- --check

  check:
    name: Cargo check
    needs: format
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - name: Install linux dependencies
        run: sudo apt update && sudo apt install -y cargo clang libssl-dev llvm libudev-dev protobuf-compiler
<<<<<<< HEAD
      - name: Install toolchain and rust-src
        uses: actions-rs/toolchain@v1
        with:
<<<<<<< HEAD
          toolchain: 1.79.0
=======
          toolchain: nightly-2024-03-12
>>>>>>> 656e5410 (Fix/staking migrations (#300))
=======
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.77.0
>>>>>>> 7ad744e7 (Enable Clippy (#324))
          override: true
          target: wasm32-unknown-unknown
          components: rust-src
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Install try-runtime
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        run: cargo install --git https://github.com/paritytech/try-runtime-cli --tag v0.7.0 --locked
=======
        run: cargo install --git https://github.com/paritytech/try-runtime-cli --locked
>>>>>>> f598255f (Enable try-runtime (#325))
=======
        run: cargo install --git https://github.com/paritytech/try-runtime-cli --tag v0.7.0 --locked
>>>>>>> d9cc7c7d (New `join_cluster` extrinsic (#425))
=======
        run: cargo install --git https://github.com/paritytech/try-runtime-cli --tag v0.7.0 --locked
>>>>>>> ad57dbb2 (fix CI)
      - name: Check Build
        run: |
          cargo build --release --features try-runtime
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
      - name: Check Try-Runtime
        run: |
<<<<<<< HEAD
          try-runtime --runtime ./target/release/wbuild/cere-runtime/cere_runtime.compact.compressed.wasm \
          on-runtime-upgrade --disable-idempotency-checks live --uri wss://archive.qanet.cere.network:443
<<<<<<< HEAD
=======
          try-runtime --runtime ./target/release/wbuild/cere-dev-runtime/cere_dev_runtime.compact.compressed.wasm \
          on-runtime-upgrade --disable-idempotency-checks live --uri wss://rpc.devnet.cere.network:443
>>>>>>> f598255f (Enable try-runtime (#325))
=======
#      - name: Check Try-Runtime
#        run: |
#          try-runtime --runtime ./target/release/wbuild/cere-dev-runtime/cere_dev_runtime.compact.compressed.wasm \
#          on-runtime-upgrade --disable-idempotency-checks live --uri wss://rpc.devnet.cere.network:443
>>>>>>> 33240126 (OCW-DAC-Validation changes (#397))
=======
      - name: Check Try-Runtime
        run: |
          try-runtime --runtime ./target/release/wbuild/cere-dev-runtime/cere_dev_runtime.compact.compressed.wasm \
<<<<<<< HEAD
<<<<<<< HEAD
          on-runtime-upgrade --disable-idempotency-checks live --uri wss://archive.devnet.cere.network:443
>>>>>>> 642d75e7 (Added try-runtime check in CI (#409))
=======
          on-runtime-upgrade --disable-idempotency-checks live --uri wss://rpc.devnet.cere.network:443
>>>>>>> 91b446cb (Changes to fetch minimum sub-trees which are in consensus (#424))
=======
>>>>>>> fdc69516 (Fixed CI)
=======
          on-runtime-upgrade --disable-idempotency-checks live --uri wss://archive.devnet.cere.network:443
>>>>>>> e8a95cd3 (refactoring)
      - name: Run dev chain
        run: |
          timeout --preserve-status 30s ./target/release/cere --dev
=======
      # - name: Check Try-Runtime
      #   run: |
      #     try-runtime --runtime ./target/release/wbuild/cere-dev-runtime/cere_dev_runtime.compact.compressed.wasm \
      #     on-runtime-upgrade --disable-idempotency-checks live --uri wss://archive.devnet.cere.network:443
      # - name: Run dev chain
      #   run: |
      #     timeout --preserve-status 30s ./target/release/cere --dev
>>>>>>> 720b3086 (chore: disabling try-runtime check for Devnet as it is down)
      - name: Check Build for Benchmarking
        run: >
          pushd node &&
          cargo check --features=runtime-benchmarks --release

<<<<<<< HEAD
<<<<<<< HEAD
  clippy:
    name: Run Clippy
    needs: format
    runs-on: ubuntu-24.04
=======
  clippy:
    name: Run Clippy
    needs: format
<<<<<<< HEAD
    runs-on: ubuntu-22.04
>>>>>>> c2a9d508 (Fix/original staking (#322))
=======
    runs-on: ubuntu-24.04
>>>>>>> 19c534c1 (Update `ci.yaml` runners to Ubuntu 24.04)
    steps:
      - uses: actions/checkout@v3
      - name: Install linux dependencies
        run: sudo apt update && sudo apt install -y cargo clang libssl-dev llvm libudev-dev protobuf-compiler
<<<<<<< HEAD
<<<<<<< HEAD
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.79.0
          override: true
          target: wasm32-unknown-unknown
          components: rust-src
=======
      - name: Install nightly toolchain
=======
      - name: Install toolchain
>>>>>>> 7ad744e7 (Enable Clippy (#324))
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.77.0
          override: true
          target: wasm32-unknown-unknown
          components: clippy
>>>>>>> c2a9d508 (Fix/original staking (#322))
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Check with Clippy
        run: |
          cargo clippy --no-deps --all-targets --features runtime-benchmarks,try-runtime --workspace -- --deny warnings
<<<<<<< HEAD
=======
# Disabled for one release to apply missing migrations
# https://github.com/Cerebellum-Network/blockchain-node/pull/300
#  clippy:
#    name: Run Clippy
#    needs: format
#    runs-on: ubuntu-22.04
#    steps:
#      - uses: actions/checkout@v3
#      - name: Install linux dependencies
#        run: sudo apt update && sudo apt install -y cargo clang libssl-dev llvm libudev-dev protobuf-compiler
#      - name: Install nightly toolchain
#        uses: actions-rs/toolchain@v1
#        with:
#          toolchain: nightly-2023-05-23
#          override: true
#          target: wasm32-unknown-unknown
#          components: clippy
#      - name: Rust Cache
#        uses: Swatinem/rust-cache@v2
#      - name: Check with Clippy
#        run: |
#          cargo clippy --no-deps --all-targets --features runtime-benchmarks,try-runtime --workspace -- --deny warnings
>>>>>>> 656e5410 (Fix/staking migrations (#300))
=======
>>>>>>> c2a9d508 (Fix/original staking (#322))

  tests:
    name: Run tests
    needs: format
    # The type of runner that the job will run on
    runs-on: ["self-hosted", "cere-network-memory-large"]
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Install linux dependencies
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        run: sudo apt update && sudo apt install -y cargo clang libssl-dev llvm libudev-dev protobuf-compiler make
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
<<<<<<< HEAD
          toolchain: 1.79.0
=======
          toolchain: nightly-2024-03-12
>>>>>>> 656e5410 (Fix/staking migrations (#300))
=======
        run: sudo apt update && sudo apt install -y cargo clang libssl-dev llvm libudev-dev protobuf-compiler
=======
        run: sudo apt update && sudo apt install -y cargo clang libssl-dev llvm libudev-dev protobuf-compiler make
>>>>>>> 7fe1efef (fix: attempt to fix tests launch on CI)
=======
        run: sudo apt update && sudo apt install -y cargo clang libssl-dev llvm libudev-dev protobuf-compiler make
>>>>>>> 8964349e (Update ci.yaml)
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.77.0
>>>>>>> 7ad744e7 (Enable Clippy (#324))
          override: true
          target: wasm32-unknown-unknown
          components: rust-src
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.22.0'
          args: '--verbose --locked --no-fail-fast --workspace --features runtime-benchmarks --out "Xml"'
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: tarpaulin coverage
          path: ./tarpaulin-report.xml
