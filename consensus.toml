# Required
[hyperbridge]
type = "grandpa"

[hyperbridge.grandpa]
# Hyperbridge's relay chain websocket RPC
rpc = "wss://hyperbridge-paseo-relay.blockops.network:443"
# Hyperbridge's slot duration
slot_duration = 6
# How frequently to exchange consensus proofs
consensus_update_frequency = 60
# Hyperbridge's paraId on the provided relay chain
# For Paseo Testnet: para_ids = [4009]
# For Polkadot Mainnet: para_ids = [3367]
para_ids = [4009]

[hyperbridge.substrate]
# Hyperbridge's relay chain websocket RPC
rpc_ws = "wss://hyperbridge-paseo-rpc.blockops.network:443"
# Hyperbridge's hashing algorithm
hashing = "Keccak"
# Hyperbridge's consensus state id
# For Paseo Testnet: PAS0
# For Polkadot Mainnet: DOT0
consensus_state_id = "PAS0"
# Hyperbridge's state machine ID
# For Paseo Testnet: KUSAMA-4009
# For Polkadot Mainnet: POLKADOT-3367
state_machine = "KUSAMA-4009"

# can use any key here
[cere]
type = "grandpa"

[cere.substrate]
# Solochains's websocket RPC
rpc_ws = "wss://archive.testnet.cere.network:443"
# Hashing can be "Keccak" or "Blake2"
hashing = "Blake2"
# Solochains's consensus state id on Hyperbridge
# should be 4 utf-8 chars chosen by solochain
consensus_state_id = "CERE"
# Solochains's state machine id. eg
state_machine = "SUBSTRATE-cere"

[cere.grandpa]
# Solochains's websocket RPC
rpc = "wss://archive.testnet.cere.network:443"
# Solochains's slot duration
slot_duration = 6
# How frequently to exchange consensus proofs
consensus_update_frequency = 60
# Any para ids to prove if solochain is actually a relay chain
para_ids = []

[relayer]
maximum_update_intervals = [
  [{ state_id = "SUBSTRATE-cere", consensus_state_id = "CERE" }, 180], # Restart if no update after 3 minutes
  [{ state_id = "KUSAMA-4009", consensus_state_id = "PAS0" }, 180], # Restart if no update after 3 minutes
]
