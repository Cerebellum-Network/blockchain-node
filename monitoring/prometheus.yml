global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'blockchain-node'
    environment: 'production'

rule_files:
  - "/etc/prometheus/rules/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 15s
    metrics_path: /metrics

  # System metrics via node-exporter
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s
    metrics_path: /metrics

  # Blockchain node metrics
  - job_name: 'blockchain-node'
    static_configs:
      - targets: ['host.docker.internal:9615']  # Default Substrate metrics port
    scrape_interval: 10s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: 'host.docker.internal:9615'

  # Security metrics endpoint
  - job_name: 'security-metrics'
    static_configs:
      - targets: ['host.docker.internal:9616']  # Custom security metrics port
    scrape_interval: 5s
    metrics_path: /security/metrics
    scrape_timeout: 10s

  # P2P network metrics
  - job_name: 'p2p-metrics'
    static_configs:
      - targets: ['host.docker.internal:9615']
    scrape_interval: 30s
    metrics_path: /metrics
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'substrate_sub_libp2p_.*'
        action: keep

  # Consensus metrics
  - job_name: 'consensus-metrics'
    static_configs:
      - targets: ['host.docker.internal:9615']
    scrape_interval: 10s
    metrics_path: /metrics
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'substrate_finality_.*|substrate_babe_.*|substrate_grandpa_.*'
        action: keep

  # Runtime metrics
  - job_name: 'runtime-metrics'
    static_configs:
      - targets: ['host.docker.internal:9615']
    scrape_interval: 15s
    metrics_path: /metrics
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'substrate_runtime_.*|substrate_state_.*'
        action: keep

  # RPC metrics
  - job_name: 'rpc-metrics'
    static_configs:
      - targets: ['host.docker.internal:9933']  # RPC port
    scrape_interval: 30s
    metrics_path: /metrics
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'substrate_rpc_.*'
        action: keep

  # Docker container metrics
  - job_name: 'docker-containers'
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 30s
    relabel_configs:
      - source_labels: [__meta_docker_container_name]
        target_label: container_name
      - source_labels: [__meta_docker_container_label_com_docker_compose_service]
        target_label: compose_service
      - source_labels: [__address__]
        target_label: __param_target
      - target_label: __address__
        replacement: 'cadvisor:8080'
    metrics_path: /metrics

  # Custom application metrics
  - job_name: 'custom-metrics'
    static_configs:
      - targets: ['host.docker.internal:8080']
    scrape_interval: 30s
    metrics_path: /custom/metrics
    honor_labels: true

  # Alertmanager metrics
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
    scrape_interval: 30s
    metrics_path: /metrics

  # Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    scrape_interval: 30s
    metrics_path: /metrics

  # Loki metrics
  - job_name: 'loki'
    static_configs:
      - targets: ['loki:3100']
    scrape_interval: 30s
    metrics_path: /metrics

  # Jaeger metrics
  - job_name: 'jaeger'
    static_configs:
      - targets: ['jaeger:14269']
    scrape_interval: 30s
    metrics_path: /metrics

# Remote write configuration for long-term storage
remote_write:
  - url: "http://localhost:9201/write"
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500
    metadata_config:
      send: true
      send_interval: 30s
      max_samples_per_send: 500 
