//! Autogenerated weights for pallet_ddc_staking
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2024-07-05, STEPS: `50`, REPEAT: 20, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `bench`, CPU: `AMD EPYC-Milan Processor`
//! EXECUTION: , WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/cere
// benchmark
// pallet
// --chain=dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=pallet_ddc_staking
// --extrinsic=*
// --steps=50
// --repeat=20
// --template=./.maintain/frame-weight-template.hbs
// --output=pallets/ddc-staking/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_ddc_staking.
pub trait WeightInfo {
	fn bond() -> Weight;
	fn unbond() -> Weight;
	fn withdraw_unbonded() -> Weight;
	fn store() -> Weight;
	fn chill() -> Weight;
	fn set_controller() -> Weight;
	fn set_node() -> Weight;
	fn fast_chill() -> Weight;
	fn bond_cluster() -> Weight;
	fn unbond_cluster() -> Weight;
	fn withdraw_unbonded_cluster() -> Weight;
}

/// Weights for pallet_ddc_staking using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
	// Storage: `DdcStaking::Bonded` (r:1 w:1)
	// Proof: `DdcStaking::Bonded` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Ledger` (r:1 w:1)
	// Proof: `DdcStaking::Ledger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Nodes` (r:1 w:1)
	// Proof: `DdcStaking::Nodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Providers` (r:1 w:1)
	// Proof: `DdcStaking::Providers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcNodes::StorageNodes` (r:1 w:0)
	// Proof: `DdcNodes::StorageNodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `Balances::Locks` (r:1 w:1)
	// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	// Storage: `Balances::Freezes` (r:1 w:0)
	// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	fn bond() -> Weight {
		Weight::from_parts(91_663_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(5_u64))
	}
	// Storage: `DdcStaking::Ledger` (r:1 w:1)
	// Proof: `DdcStaking::Ledger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Storages` (r:1 w:0)
	// Proof: `DdcStaking::Storages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Providers` (r:1 w:0)
	// Proof: `DdcStaking::Providers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcNodes::StorageNodes` (r:1 w:0)
	// Proof: `DdcNodes::StorageNodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `Balances::Locks` (r:1 w:1)
	// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	// Storage: `Balances::Freezes` (r:1 w:0)
	// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:1 w:1)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn unbond() -> Weight {
		Weight::from_parts(76_793_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(7_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: `DdcStaking::Ledger` (r:1 w:1)
	// Proof: `DdcStaking::Ledger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Providers` (r:1 w:0)
	// Proof: `DdcStaking::Providers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `Balances::Locks` (r:1 w:1)
	// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	// Storage: `Balances::Freezes` (r:1 w:0)
	// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:1 w:1)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	// Storage: `DdcStaking::LeavingStorages` (r:1 w:0)
	// Proof: `DdcStaking::LeavingStorages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn withdraw_unbonded() -> Weight {
		Weight::from_parts(70_663_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: `DdcClusters::Clusters` (r:1 w:0)
	// Proof: `DdcClusters::Clusters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Ledger` (r:1 w:0)
	// Proof: `DdcStaking::Ledger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcClusters::ClustersGovParams` (r:1 w:0)
	// Proof: `DdcClusters::ClustersGovParams` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Providers` (r:1 w:0)
	// Proof: `DdcStaking::Providers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Storages` (r:1 w:1)
	// Proof: `DdcStaking::Storages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::LeavingStorages` (r:1 w:0)
	// Proof: `DdcStaking::LeavingStorages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn store() -> Weight {
		Weight::from_parts(48_231_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: `DdcStaking::Ledger` (r:1 w:1)
	// Proof: `DdcStaking::Ledger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Storages` (r:1 w:1)
	// Proof: `DdcStaking::Storages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcClusters::ClustersGovParams` (r:1 w:0)
	// Proof: `DdcClusters::ClustersGovParams` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn chill() -> Weight {
		Weight::from_parts(41_127_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	// Storage: `DdcStaking::Bonded` (r:1 w:1)
	// Proof: `DdcStaking::Bonded` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Ledger` (r:2 w:2)
	// Proof: `DdcStaking::Ledger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn set_controller() -> Weight {
		Weight::from_parts(28_604_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: `DdcStaking::Nodes` (r:1 w:2)
	// Proof: `DdcStaking::Nodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Providers` (r:1 w:1)
	// Proof: `DdcStaking::Providers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Storages` (r:1 w:0)
	// Proof: `DdcStaking::Storages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::LeavingStorages` (r:1 w:0)
	// Proof: `DdcStaking::LeavingStorages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn set_node() -> Weight {
		Weight::from_parts(30_047_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(4_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	// Storage: `DdcStaking::Ledger` (r:1 w:1)
	// Proof: `DdcStaking::Ledger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Providers` (r:1 w:0)
	// Proof: `DdcStaking::Providers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Nodes` (r:1 w:0)
	// Proof: `DdcStaking::Nodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Storages` (r:1 w:0)
	// Proof: `DdcStaking::Storages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcClusters::ClustersNodes` (r:1 w:0)
	// Proof: `DdcClusters::ClustersNodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn fast_chill() -> Weight {
		Weight::from_parts(48_291_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(1_u64))
	}
	// Storage: `DdcClusters::Clusters` (r:1 w:1)
	// Proof: `DdcClusters::Clusters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::ClusterBonded` (r:1 w:1)
	// Proof: `DdcStaking::ClusterBonded` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::ClusterLedger` (r:1 w:1)
	// Proof: `DdcStaking::ClusterLedger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `Balances::Locks` (r:1 w:1)
	// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	// Storage: `Balances::Freezes` (r:1 w:0)
	// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	fn bond_cluster() -> Weight {
		Weight::from_parts(92_223_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	// Storage: `DdcClusters::Clusters` (r:1 w:1)
	// Proof: `DdcClusters::Clusters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::ClusterLedger` (r:1 w:1)
	// Proof: `DdcStaking::ClusterLedger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcClusters::ClustersNodesStats` (r:1 w:0)
	// Proof: `DdcClusters::ClustersNodesStats` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `Balances::Locks` (r:1 w:1)
	// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	// Storage: `Balances::Freezes` (r:1 w:0)
	// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:1 w:1)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn unbond_cluster() -> Weight {
		Weight::from_parts(84_528_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(6_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	// Storage: `DdcClusters::Clusters` (r:1 w:1)
	// Proof: `DdcClusters::Clusters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::ClusterLedger` (r:1 w:1)
	// Proof: `DdcStaking::ClusterLedger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::ClusterBonded` (r:1 w:1)
	// Proof: `DdcStaking::ClusterBonded` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `Balances::Locks` (r:1 w:1)
	// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	// Storage: `Balances::Freezes` (r:1 w:0)
	// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	fn withdraw_unbonded_cluster() -> Weight {
		Weight::from_parts(99_307_000_u64, 0)
			.saturating_add(T::DbWeight::get().reads(5_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: `DdcStaking::Bonded` (r:1 w:1)
	// Proof: `DdcStaking::Bonded` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Ledger` (r:1 w:1)
	// Proof: `DdcStaking::Ledger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Nodes` (r:1 w:1)
	// Proof: `DdcStaking::Nodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Providers` (r:1 w:1)
	// Proof: `DdcStaking::Providers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcNodes::StorageNodes` (r:1 w:0)
	// Proof: `DdcNodes::StorageNodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `Balances::Locks` (r:1 w:1)
	// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	// Storage: `Balances::Freezes` (r:1 w:0)
	// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	fn bond() -> Weight {
		Weight::from_parts(91_663_000_u64, 0)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(5_u64))
	}
	// Storage: `DdcStaking::Ledger` (r:1 w:1)
	// Proof: `DdcStaking::Ledger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Storages` (r:1 w:0)
	// Proof: `DdcStaking::Storages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Providers` (r:1 w:0)
	// Proof: `DdcStaking::Providers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcNodes::StorageNodes` (r:1 w:0)
	// Proof: `DdcNodes::StorageNodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `Balances::Locks` (r:1 w:1)
	// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	// Storage: `Balances::Freezes` (r:1 w:0)
	// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:1 w:1)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn unbond() -> Weight {
		Weight::from_parts(76_793_000_u64, 0)
			.saturating_add(RocksDbWeight::get().reads(7_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	// Storage: `DdcStaking::Ledger` (r:1 w:1)
	// Proof: `DdcStaking::Ledger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Providers` (r:1 w:0)
	// Proof: `DdcStaking::Providers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `Balances::Locks` (r:1 w:1)
	// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	// Storage: `Balances::Freezes` (r:1 w:0)
	// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:1 w:1)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	// Storage: `DdcStaking::LeavingStorages` (r:1 w:0)
	// Proof: `DdcStaking::LeavingStorages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn withdraw_unbonded() -> Weight {
		Weight::from_parts(70_663_000_u64, 0)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	// Storage: `DdcClusters::Clusters` (r:1 w:0)
	// Proof: `DdcClusters::Clusters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Ledger` (r:1 w:0)
	// Proof: `DdcStaking::Ledger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcClusters::ClustersGovParams` (r:1 w:0)
	// Proof: `DdcClusters::ClustersGovParams` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Providers` (r:1 w:0)
	// Proof: `DdcStaking::Providers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Storages` (r:1 w:1)
	// Proof: `DdcStaking::Storages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::LeavingStorages` (r:1 w:0)
	// Proof: `DdcStaking::LeavingStorages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn store() -> Weight {
		Weight::from_parts(48_231_000_u64, 0)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	// Storage: `DdcStaking::Ledger` (r:1 w:1)
	// Proof: `DdcStaking::Ledger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Storages` (r:1 w:1)
	// Proof: `DdcStaking::Storages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcClusters::ClustersGovParams` (r:1 w:0)
	// Proof: `DdcClusters::ClustersGovParams` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn chill() -> Weight {
		Weight::from_parts(41_127_000_u64, 0)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	// Storage: `DdcStaking::Bonded` (r:1 w:1)
	// Proof: `DdcStaking::Bonded` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Ledger` (r:2 w:2)
	// Proof: `DdcStaking::Ledger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn set_controller() -> Weight {
		Weight::from_parts(28_604_000_u64, 0)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	// Storage: `DdcStaking::Nodes` (r:1 w:2)
	// Proof: `DdcStaking::Nodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Providers` (r:1 w:1)
	// Proof: `DdcStaking::Providers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Storages` (r:1 w:0)
	// Proof: `DdcStaking::Storages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::LeavingStorages` (r:1 w:0)
	// Proof: `DdcStaking::LeavingStorages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn set_node() -> Weight {
		Weight::from_parts(30_047_000_u64, 0)
			.saturating_add(RocksDbWeight::get().reads(4_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	// Storage: `DdcStaking::Ledger` (r:1 w:1)
	// Proof: `DdcStaking::Ledger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Providers` (r:1 w:0)
	// Proof: `DdcStaking::Providers` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Nodes` (r:1 w:0)
	// Proof: `DdcStaking::Nodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::Storages` (r:1 w:0)
	// Proof: `DdcStaking::Storages` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcClusters::ClustersNodes` (r:1 w:0)
	// Proof: `DdcClusters::ClustersNodes` (`max_values`: None, `max_size`: None, mode: `Measured`)
	fn fast_chill() -> Weight {
		Weight::from_parts(48_291_000_u64, 0)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(1_u64))
	}
	// Storage: `DdcClusters::Clusters` (r:1 w:1)
	// Proof: `DdcClusters::Clusters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::ClusterBonded` (r:1 w:1)
	// Proof: `DdcStaking::ClusterBonded` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::ClusterLedger` (r:1 w:1)
	// Proof: `DdcStaking::ClusterLedger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `Balances::Locks` (r:1 w:1)
	// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	// Storage: `Balances::Freezes` (r:1 w:0)
	// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	fn bond_cluster() -> Weight {
		Weight::from_parts(92_223_000_u64, 0)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	// Storage: `DdcClusters::Clusters` (r:1 w:1)
	// Proof: `DdcClusters::Clusters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::ClusterLedger` (r:1 w:1)
	// Proof: `DdcStaking::ClusterLedger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcClusters::ClustersNodesStats` (r:1 w:0)
	// Proof: `DdcClusters::ClustersNodesStats` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `Balances::Locks` (r:1 w:1)
	// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	// Storage: `Balances::Freezes` (r:1 w:0)
	// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	// Storage: `System::Account` (r:1 w:1)
	// Proof: `System::Account` (`max_values`: None, `max_size`: Some(128), added: 2603, mode: `MaxEncodedLen`)
	fn unbond_cluster() -> Weight {
		Weight::from_parts(84_528_000_u64, 0)
			.saturating_add(RocksDbWeight::get().reads(6_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	// Storage: `DdcClusters::Clusters` (r:1 w:1)
	// Proof: `DdcClusters::Clusters` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::ClusterLedger` (r:1 w:1)
	// Proof: `DdcStaking::ClusterLedger` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `DdcStaking::ClusterBonded` (r:1 w:1)
	// Proof: `DdcStaking::ClusterBonded` (`max_values`: None, `max_size`: None, mode: `Measured`)
	// Storage: `Balances::Locks` (r:1 w:1)
	// Proof: `Balances::Locks` (`max_values`: None, `max_size`: Some(1299), added: 3774, mode: `MaxEncodedLen`)
	// Storage: `Balances::Freezes` (r:1 w:0)
	// Proof: `Balances::Freezes` (`max_values`: None, `max_size`: Some(49), added: 2524, mode: `MaxEncodedLen`)
	fn withdraw_unbonded_cluster() -> Weight {
		Weight::from_parts(99_307_000_u64, 0)
			.saturating_add(RocksDbWeight::get().reads(5_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
}
