[package]
name = "pallet-ddc-clusters-gov"
version.workspace = true
authors.workspace = true
edition.workspace = true
homepage.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true

[dependencies]
codec = { workspace = true }
ddc-primitives = { workspace = true }
frame-benchmarking = { workspace = true, optional = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
hex-literal = { workspace = true }
log = { workspace = true }
pallet-referenda = { workspace = true }
scale-info = { workspace = true }
serde = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true }
sp-std = { workspace = true }

[dev-dependencies]
frame-benchmarking = { workspace = true, default-features = true }
lazy_static = { workspace = true, default-features = true }
pallet-balances = { workspace = true, default-features = true }
pallet-contracts = { workspace = true }
pallet-conviction-voting = { workspace = true }
pallet-ddc-clusters = { workspace = true, default-features = true }
pallet-ddc-nodes = { workspace = true }
pallet-ddc-staking = { workspace = true }
pallet-insecure-randomness-collective-flip = { workspace = true, default-features = true }
pallet-preimage = { workspace = true }
pallet-scheduler = { workspace = true }
pallet-timestamp = { workspace = true, default-features = true }
parking_lot = { workspace = true, default-features = true }
sp-arithmetic = { workspace = true }
sp-core = { workspace = true, default-features = true }
sp-io = { workspace = true, default-features = true }
sp-tracing = { workspace = true, default-features = true }
substrate-test-utils = { workspace = true, default-features = true }

[features]
default = ["std"]
std = [
  "codec/std",
  "ddc-primitives/std",
  "frame-support/std",
  "frame-system/std",
  "frame-benchmarking/std",
  "scale-info/std",
  "sp-core/std",
  "sp-runtime/std",
  "sp-std/std",
]
runtime-benchmarks = [
  "ddc-primitives/runtime-benchmarks",
  "frame-benchmarking/runtime-benchmarks",
  "frame-support/runtime-benchmarks",
  "frame-system/runtime-benchmarks",
  "sp-runtime/runtime-benchmarks",
]
try-runtime = [
  "frame-system/try-runtime",
  "pallet-referenda/try-runtime",
]
