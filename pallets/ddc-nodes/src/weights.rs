
//! Autogenerated weights for `pallet_ddc_nodes`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-11-16, STEPS: `200`, REPEAT: 1000, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! HOSTNAME: `Raids-MBP-2`, CPU: `<UNKNOWN>`
//! EXECUTION: None, WASM-EXECUTION: Interpreted, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/cere
// benchmark
// pallet
// --chain
// dev
// --pallet
// pallet_ddc_nodes
// --extrinsic
// *
// --steps
// 200
// --repeat
// 1000
// --output
// pallets/ddc-nodes/src/weights.rs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_ddc_nodes.
pub trait WeightInfo {
	fn create_node() -> Weight;
	fn delete_node() -> Weight;
	fn set_node_params() -> Weight;
}

/// Weights for pallet_ddc_nodes.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T>  {
	// Storage: DdcNodes CDNNodes (r:1 w:1)
	fn create_node() -> Weight {
		Weight::from_ref_time(12_000_000u64)
			.saturating_add(T::DbWeight::get().reads(1u64))
			.saturating_add(T::DbWeight::get().writes(1u64))
	}
	// Storage: DdcNodes CDNNodes (r:1 w:1)
	fn delete_node() -> Weight {
		Weight::from_ref_time(14_000_000u64)
			.saturating_add(T::DbWeight::get().reads(1u64))
			.saturating_add(T::DbWeight::get().writes(1u64))
	}
	// Storage: DdcNodes CDNNodes (r:1 w:1)
	fn set_node_params() -> Weight {
		Weight::from_ref_time(15_000_000u64)
			.saturating_add(T::DbWeight::get().reads(1u64))
			.saturating_add(T::DbWeight::get().writes(1u64))
	}
}

// For backwards compatibility and tests
impl WeightInfo for () {
	// Storage: DdcNodes CDNNodes (r:1 w:1)
	fn create_node() -> Weight {
		Weight::from_ref_time(12_000_000u64)
			.saturating_add(RocksDbWeight::get().reads(1u64))
			.saturating_add(RocksDbWeight::get().writes(1u64))
	}
	// Storage: DdcNodes CDNNodes (r:1 w:1)
	fn delete_node() -> Weight {
		Weight::from_ref_time(14_000_000u64)
			.saturating_add(RocksDbWeight::get().reads(1u64))
			.saturating_add(RocksDbWeight::get().writes(1u64))
	}
	// Storage: DdcNodes CDNNodes (r:1 w:1)
	fn set_node_params() -> Weight {
		Weight::from_ref_time(15_000_000u64)
			.saturating_add(RocksDbWeight::get().reads(1u64))
			.saturating_add(RocksDbWeight::get().writes(1u64))
	}
}